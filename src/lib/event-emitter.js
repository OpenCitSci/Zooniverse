// Generated by CoffeeScript 1.4.0
(function() {
  var $, EventEmitter, _ref,
    __slice = [].slice;

  if ((_ref = window.zooniverse) == null) {
    window.zooniverse = {};
  }

  $ = window.jQuery;

  EventEmitter = (function() {

    function EventEmitter() {}

    EventEmitter.on = function(eventName) {
      var _ref1;
      console.log("Turning on " + eventName + " on", this);
      return (_ref1 = $(this)).on.apply(_ref1, arguments);
    };

    EventEmitter.one = function(eventName) {
      var _ref1;
      console.log("Turning on (once) " + eventName + " on", this);
      return (_ref1 = $(this)).one.apply(_ref1, arguments);
    };

    EventEmitter.off = function(eventName) {
      var _ref1;
      console.log("Turning off " + eventName + " on", this);
      return (_ref1 = $(this)).off.apply(_ref1, arguments);
    };

    EventEmitter.trigger = function(eventName) {
      var _ref1;
      console.log("Triggering " + eventName + " on", this);
      return (_ref1 = $(this)).trigger.apply(_ref1, arguments);
    };

    EventEmitter.prototype.on = function(eventName) {
      var _ref1;
      console.log("Turning on " + eventName + " on", this);
      return (_ref1 = $(this)).on.apply(_ref1, arguments);
    };

    EventEmitter.prototype.one = function(eventName) {
      var _ref1;
      console.log("Turning on (once) " + eventName + " on", this);
      return (_ref1 = $(this)).one.apply(_ref1, arguments);
    };

    EventEmitter.prototype.off = function(eventName) {
      var _ref1;
      console.log("Turning off " + eventName + " on", this);
      return (_ref1 = $(this)).off.apply(_ref1, arguments);
    };

    EventEmitter.prototype.trigger = function() {
      var args, eventName, _base, _ref1;
      eventName = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      console.log("Triggering " + eventName + " on", this);
      (_ref1 = $(this)).trigger.apply(_ref1, [eventName].concat(__slice.call(args)));
      return typeof (_base = this.constructor).trigger === "function" ? _base.trigger(eventName, [this].concat(__slice.call(args))) : void 0;
    };

    return EventEmitter;

  })();

  window.zooniverse.EventEmitter = EventEmitter;

  if (typeof module !== "undefined" && module !== null) {
    module.exports = EventEmitter;
  }

}).call(this);
