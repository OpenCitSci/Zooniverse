// Generated by CoffeeScript 1.6.3
(function() {
  var $, Controller, Dropdown, HTML, LanguagesMenu, template, _base, _ref, _ref1, _ref2, _ref3, _ref4, _ref5,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = ((_ref = window.zooniverse) != null ? (_ref1 = _ref.controllers) != null ? _ref1.BaseController : void 0 : void 0) || require('./base-controller');

  Dropdown = ((_ref2 = window.zooniverse) != null ? (_ref3 = _ref2.controllers) != null ? _ref3.Dropdown : void 0 : void 0) || require('./dropdown');

  template = ((_ref4 = window.zooniverse) != null ? (_ref5 = _ref4.views) != null ? _ref5.languagesMenu : void 0 : void 0) || require('../views/languages-menu');

  $ = window.jQuery;

  HTML = $(document.body.parentNode);

  LanguagesMenu = (function(_super) {
    __extends(LanguagesMenu, _super);

    LanguagesMenu.prototype.className = 'zooniverse-languages-menu';

    LanguagesMenu.prototype.template = template;

    LanguagesMenu.prototype.events = {
      'click button[name="language"]': 'onClickLanguageButton'
    };

    function LanguagesMenu() {
      this.onClickLanguageButton = __bind(this.onClickLanguageButton, this);
      if (!DEFINE_ZOONIVERSE_LANGUAGES) {
        return;
      }
      this.availableLanguages = DEFINE_ZOONIVERSE_LANGUAGES;
      this.preferredLanguage = (function() {
        try {
          return location.search.match(/lang=([\$|\w]+)/)[1];
        } catch (_error) {}
      })();
      this.preferredLanguage || (this.preferredLanguage = localStorage.preferredLanguage);
      this.preferredLanguage || (this.preferredLanguage = 'en');
      HTML.attr('data-language', this.preferredLanguage);
      LanguagesMenu.__super__.constructor.apply(this, arguments);
      this.el.find('button[value="' + this.preferredLanguage + '"]').click();
    }

    LanguagesMenu.prototype.onClickLanguageButton = function(e) {
      var request, target,
        _this = this;
      target = $(e.currentTarget);
      request = $.getJSON("./translations/" + (target.val()) + ".json");
      return request.done(function(data) {
        var buttons;
        buttons = _this.el.find('button[name="language"]');
        buttons.removeClass('active');
        target.addClass('active');
        return _this.trigger('language-fetched', data);
      });
    };

    return LanguagesMenu;

  })(Controller);

  if (window.zooniverse == null) {
    window.zooniverse = {};
  }

  if ((_base = window.zooniverse).controllers == null) {
    _base.controllers = {};
  }

  window.zooniverse.controllers.LanguagesMenu;

  if (typeof module !== "undefined" && module !== null) {
    module.exports = LanguagesMenu;
  }

}).call(this);
