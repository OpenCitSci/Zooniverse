// Generated by CoffeeScript 1.4.0
(function() {
  var Api, BaseController, LoginForm, TopBar, User, template, _base, _base1, _ref, _ref1, _ref2,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  if ((_ref = window.zooniverse) == null) {
    window.zooniverse = {};
  }

  if ((_ref1 = (_base = window.zooniverse).controllers) == null) {
    _base.controllers = {};
  }

  if ((_ref2 = (_base1 = window.zooniverse).views) == null) {
    _base1.views = {};
  }

  BaseController = zooniverse.controllers.BaseController || require('./base-controller');

  LoginForm = zooniverse.controllers.LoginForm || require('./login-form');

  template = zooniverse.views.topBar || require('../views/top-bar');

  Api = zooniverse.api || require('../lib/api');

  User = zooniverse.models.User || require('../models/user');

  TopBar = (function(_super) {

    __extends(TopBar, _super);

    TopBar.prototype.className = 'zooniverse-top-bar';

    TopBar.prototype.template = template;

    TopBar.prototype.messageTimeout = 2 * 60 * 1000;

    TopBar.prototype.events = {
      'click button[name="sign-up"]': 'onClickSignUp',
      'click button[name="sign-out"]': 'onClickSignOut'
    };

    TopBar.prototype.elements = {
      '.current-user-name': 'currentUserName',
      '.message-count': 'messageCount',
      '.avatar img': 'avatarImage'
    };

    function TopBar() {
      this.getMessages = __bind(this.getMessages, this);

      this.onUserChange = __bind(this.onUserChange, this);
      TopBar.__super__.constructor.apply(this, arguments);
      new LoginForm({
        el: this.el.find('form[name="sign-in"]')
      });
      User.on('change', this.onUserChange);
    }

    TopBar.prototype.onClickSignUp = function() {
      return alert('TODO: Sign up dialog');
    };

    TopBar.prototype.onClickSignOut = function() {
      return User.logout();
    };

    TopBar.prototype.onUserChange = function(e, user) {
      this.el.toggleClass('signed-in', user != null);
      this.currentUserName.html((user != null ? user.name : void 0) || '');
      this.avatarImage.attr({
        src: user != null ? user.avatar : void 0
      });
      return this.getMessages();
    };

    TopBar.prototype.getMessages = function() {
      var _this = this;
      if (User.current != null) {
        return Api.current.get('/talk/messages', function(messages) {
          _this.el.toggleClass('has-messages', messages.length !== 0);
          _this.messageCount.html(messages.length);
          return setTimeout(_this.getMessages, _this.messageTimeout);
        });
      } else {
        this.el.removeClass('has-messages');
        return this.messageCount.html('0');
      }
    };

    return TopBar;

  })(BaseController);

  window.zooniverse.controllers.TopBar = TopBar;

  if (typeof module !== "undefined" && module !== null) {
    module.exports = TopBar;
  }

}).call(this);
