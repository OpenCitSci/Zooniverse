// Generated by CoffeeScript 1.6.3
(function() {
  var LanguageManager, translate, _ref, _ref1, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18, _ref19, _ref2, _ref20, _ref21, _ref22, _ref23, _ref24, _ref25, _ref26, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9,
    __slice = [].slice;

  LanguageManager = ((_ref = window.zooniverse) != null ? _ref.LanguageManager : void 0) || require('./language-manager');

  translate = function() {
    var element, key, tag, _arg, _i;
    _arg = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), key = arguments[_i++];
    tag = _arg[0];
    if (tag == null) {
      tag = 'span';
    }
    element = document.createElement(tag);
    element.setAttribute(translate.attr, key);
    translate.refresh(element);
    return element.outerHTML;
  };

  translate.attr = 'data-zooniverse-translate';

  translate.strings = {
    en: ((_ref1 = window.zooniverse) != null ? (_ref2 = _ref1.translations) != null ? _ref2.en : void 0 : void 0) || require('../translations/en'),
    es: ((_ref3 = window.zooniverse) != null ? (_ref4 = _ref3.translations) != null ? _ref4.es : void 0 : void 0) || require('../translations/es'),
    fr: ((_ref5 = window.zooniverse) != null ? (_ref6 = _ref5.translations) != null ? _ref6.fr : void 0 : void 0) || require('../translations/fr'),
    it: ((_ref7 = window.zooniverse) != null ? (_ref8 = _ref7.translations) != null ? _ref8.it : void 0 : void 0) || require('../translations/it'),
    pl: ((_ref9 = window.zooniverse) != null ? (_ref10 = _ref9.translations) != null ? _ref10.pl : void 0 : void 0) || require('../translations/pl'),
    ru: ((_ref11 = window.zooniverse) != null ? (_ref12 = _ref11.translations) != null ? _ref12.ru : void 0 : void 0) || require('../translations/ru'),
    zh_tw: ((_ref13 = window.zooniverse) != null ? (_ref14 = _ref13.translations) != null ? _ref14.zh_tw : void 0 : void 0) || require('../translations/zh-tw'),
    zh_cn: ((_ref15 = window.zooniverse) != null ? (_ref16 = _ref15.translations) != null ? _ref16.zh_cn : void 0 : void 0) || require('../translations/zh-cn'),
    de: ((_ref17 = window.zooniverse) != null ? (_ref18 = _ref17.translations) != null ? _ref18.de : void 0 : void 0) || require('../translations/de'),
    cs: ((_ref19 = window.zooniverse) != null ? (_ref20 = _ref19.translations) != null ? _ref20.cs : void 0 : void 0) || require('../translations/cs'),
    ro: ((_ref21 = window.zooniverse) != null ? (_ref22 = _ref21.translations) != null ? _ref22.ro : void 0 : void 0) || require('../translations/ro'),
    ja: ((_ref23 = window.zooniverse) != null ? (_ref24 = _ref23.translations) != null ? _ref24.ja : void 0 : void 0) || require('../translations/ja'),
    el: ((_ref25 = window.zooniverse) != null ? (_ref26 = _ref25.translations) != null ? _ref26.el : void 0 : void 0) || require('../translations/el')
  };

  translate.refresh = function(element, key) {
    var name, property, string, value, _i, _len, _ref27, _ref28, _ref29, _ref30, _ref31, _results;
    _ref27 = element.attributes;
    _results = [];
    for (_i = 0, _len = _ref27.length; _i < _len; _i++) {
      _ref28 = _ref27[_i], name = _ref28.name, value = _ref28.value;
      if (name.slice(0, translate.attr.length) !== translate.attr) {
        continue;
      }
      if (!value) {
        continue;
      }
      property = name.slice(translate.attr.length + 1) || 'innerHTML';
      string = (_ref29 = translate.strings[(_ref30 = LanguageManager.current) != null ? _ref30.code : void 0]) != null ? _ref29[value] : void 0;
      string || (string = (_ref31 = translate.strings[LanguageManager.defaultLocale]) != null ? _ref31[value] : void 0);
      string || (string = value);
      if (element.hasAttribute(property)) {
        _results.push(element.setAttribute(property, string));
      } else {
        _results.push(element[property] = string);
      }
    }
    return _results;
  };

  LanguageManager.on('change-language', function() {
    var element, _i, _len, _ref27, _results;
    _ref27 = document.querySelectorAll("[" + translate.attr + "]");
    _results = [];
    for (_i = 0, _len = _ref27.length; _i < _len; _i++) {
      element = _ref27[_i];
      _results.push(translate.refresh(element));
    }
    return _results;
  });

  if (window.zooniverse == null) {
    window.zooniverse = {};
  }

  window.zooniverse.translate = translate;

  if (typeof module !== "undefined" && module !== null) {
    module.exports = translate;
  }

}).call(this);
