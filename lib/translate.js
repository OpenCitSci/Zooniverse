// Generated by CoffeeScript 1.6.3
(function() {
  var KEY_ATTRIBUTE, LanguageManager, refresh, strings, translate, _ref, _ref1, _ref2, _ref3, _ref4,
    __slice = [].slice;

  LanguageManager = ((_ref = window.zoonivers) != null ? _ref.LanguageManager : void 0) || require('./language-manager');

  strings = {
    en: ((_ref1 = window.zooniverse) != null ? (_ref2 = _ref1.translations) != null ? _ref2.en : void 0 : void 0) || require('../translations/en'),
    es: ((_ref3 = window.zooniverse) != null ? (_ref4 = _ref3.translations) != null ? _ref4.es : void 0 : void 0) || require('../translations/es')
  };

  KEY_ATTRIBUTE = 'data-zooniverse-translation-key';

  refresh = function(element, key) {
    var string, _ref5, _ref6, _ref7;
    if (key == null) {
      key = element.getAttribute(KEY_ATTRIBUTE);
    }
    string = (_ref5 = strings[(_ref6 = LanguageManager.current) != null ? _ref6.code : void 0]) != null ? _ref5[key] : void 0;
    string || (string = (_ref7 = strings[LanguageManager.prototype.code]) != null ? _ref7[key] : void 0);
    string || (string = key);
    return element.innerHTML = string;
  };

  translate = function() {
    var element, key, tag, _arg, _i;
    _arg = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), key = arguments[_i++];
    tag = _arg[0];
    if (tag == null) {
      tag = 'span';
    }
    element = document.createElement(tag);
    element.setAttribute(KEY_ATTRIBUTE, key);
    refresh(element, key);
    return element.outerHTML;
  };

  LanguageManager.on('change-language', function(e, instance, code, strings) {
    var element, _i, _len, _ref5, _results;
    _ref5 = document.querySelectorAll("[" + KEY_ATTRIBUTE + "]");
    _results = [];
    for (_i = 0, _len = _ref5.length; _i < _len; _i++) {
      element = _ref5[_i];
      _results.push(refresh(element));
    }
    return _results;
  });

  if (window.zooniverse == null) {
    window.zooniverse = {};
  }

  window.zooniverse.translate = translate;

  if (typeof module !== "undefined" && module !== null) {
    module.exports = translate;
  }

}).call(this);
