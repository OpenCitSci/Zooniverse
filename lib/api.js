// Generated by CoffeeScript 1.4.0
(function() {
  var $, Api, ProxyFrame, id, _ref,
    __slice = [].slice;

  if ((_ref = window.zooniverse) == null) {
    window.zooniverse = {};
  }

  ProxyFrame = window.zooniverse.ProxyFrame || require('./proxy-frame');

  $ = window.jQuery;

  id = -1;

  Api = (function() {

    Api.current = null;

    Api.prototype.project = '.';

    Api.prototype.headers = {};

    Api.prototype.proxy = null;

    Api.prototype.ready = false;

    function Api(_arg) {
      var host, path;
      host = _arg.host, path = _arg.path, this.project = _arg.project;
      this.proxy = new ProxyFrame({
        host: host,
        path: path
      });
      this.select();
    }

    Api.prototype.request = function(type, url, data, done, fail) {
      var _ref1;
      if (typeof data === 'function') {
        _ref1 = [done, data, null], fail = _ref1[0], done = _ref1[1], data = _ref1[2];
      }
      return this.proxy.send({
        type: type,
        url: url,
        data: data,
        headers: this.headers
      }, done, fail);
    };

    Api.prototype.get = function() {
      return this.request.apply(this, ['get'].concat(__slice.call(arguments)));
    };

    Api.prototype.getJSON = function() {
      return this.request.apply(this, ['getJSON'].concat(__slice.call(arguments)));
    };

    Api.prototype.post = function() {
      return this.request.apply(this, ['post'].concat(__slice.call(arguments)));
    };

    Api.prototype.put = function() {
      return this.request.apply(this, ['put'].concat(__slice.call(arguments)));
    };

    Api.prototype["delete"] = function() {
      return this.request.apply(this, ['delete'].concat(__slice.call(arguments)));
    };

    Api.prototype.select = function() {
      return this.constructor.current = this;
    };

    return Api;

  })();

  window.zooniverse.Api = Api;

  if (typeof module !== "undefined" && module !== null) {
    module.exports = Api;
  }

}).call(this);
