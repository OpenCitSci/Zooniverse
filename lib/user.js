// Generated by CoffeeScript 1.3.3
(function() {
  var Api, ProxyFrame, User;

  Api = require('api');

  ProxyFrame = require('proxy_frame');

  User = (function() {

    User.current = null;

    User.fetch = function(callback) {
      return Api.getJSON('/current_user', function(result) {
        console.info(arguments);
        User.current = result.success ? new User(result) : null;
        User.setAuthHeaders();
        return typeof callback === "function" ? callback(User.current) : void 0;
      });
    };

    User.setAuthHeaders = function() {
      var auth;
      if (User.current) {
        auth = base64.encode("" + User.current.name + ":" + User.current.apiKey);
        return ProxyFrame.headers['Authorization'] = "Basic " + auth;
      } else {
        return delete ProxyFrame.headers['Authorization'];
      }
    };

    function User(attrs) {
      var key, val;
      delete attrs['success'];
      for (key in attrs) {
        val = attrs[key];
        this[key] = val;
      }
    }

    return User;

  })();

  module.exports = User;

}).call(this);
