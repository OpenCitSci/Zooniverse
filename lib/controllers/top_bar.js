// Generated by CoffeeScript 1.3.3
(function() {
  var Controller, TopBar, User,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  User = require('../models/user');

  Controller = require('./controller');

  TopBar = (function(_super) {

    __extends(TopBar, _super);

    TopBar.prototype.events = {
      'click input[name="login"]': 'logIn',
      'click input[name="signup"]': 'signUp',
      'click a.top-bar-button': 'toggleDisplay'
    };

    function TopBar() {
      this.render = __bind(this.render, this);

      this.toggleDisplay = __bind(this.toggleDisplay, this);

      this.signUp = __bind(this.signUp, this);

      this.logIn = __bind(this.logIn, this);
      this.app || (this.app = "test");
      this.appName || (this.appName = "Test Name");
      User.project = this.app;
      this.render();
    }

    TopBar.prototype.elements = {
      'input[name="username"]': 'username',
      'input[name="password"]': 'password',
      '.zooniverse-top-bar-container': 'container'
    };

    TopBar.prototype.logIn = function(e) {
      var login;
      return login = User.login({
        username: this.username.val(),
        password: this.password.val()
      });
    };

    TopBar.prototype.signUp = function(e) {
      return alert('sign up');
    };

    TopBar.prototype.toggleDisplay = function(e) {
      return this.container.toggleClass('visible');
    };

    TopBar.prototype.render = function() {
      return this.html(require('../views/top_bar'));
    };

    return TopBar;

  })(Controller);

  module.exports = TopBar;

}).call(this);
